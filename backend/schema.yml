openapi: 3.0.3
info:
  title: Top Pet System API
  version: 1.0.0
  description: Sistema de gestão para pet shops - API completa para gerenciamento
    de pets, usuários, agendamentos e prontuários médicos.
  contact:
    name: Top Pet System
    email: contato@toppetsystem.com
  license:
    name: MIT License
tags:
- name: Autenticação
  description: Endpoints de login e registro de usuários
- name: Pets
  description: Operações relacionadas ao cadastro e gestão de pets
- name: Serviços
  description: Catálogo de serviços veterinários disponíveis
- name: Agendamentos
  description: Sistema de agendamento de consultas e serviços
- name: Prontuários
  description: Prontuários médicos e histórico de atendimentos
- name: Usuários
  description: Gestão de perfis de usuários do sistema
paths:
  /api/register/:
    post:
      operationId: register_create
      summary: Auto-cadastro de cliente
      description: "\n    **\U0001F513 Endpoint público para auto-cadastro** de novos\
        \ usuários como CLIENTE.\n    \n    **✅ CAMPOS OBRIGATÓRIOS:**\n    - `username`:\
        \ Nome de usuário único\n    - `password`: Senha com no mínimo 8 caracteres\
        \  \n    - `confirm_password`: Confirmação da senha\n    - `email`: Email\
        \ válido para contato\n    - `first_name`: Primeiro nome\n    - `last_name`:\
        \ Sobrenome\n    \n    **⚪ CAMPOS OPCIONAIS:**\n    - `telefone`: Telefone\
        \ de contato (pode ficar vazio)\n    - `endereco`: Endereço residencial (pode\
        \ ficar vazio)\n    \n    **ℹ️ Observações importantes:**\n    - ✅ Não requer\
        \ autenticação (endpoint público)\n    - \U0001F512 O tipo de usuário é automaticamente\
        \ definido como CLIENTE\n    - ❌ Campos CRMV e especialidade NÃO se aplicam\
        \ a este endpoint\n    - \U0001F4E7 Email deve ser único no sistema\n    -\
        \ \U0001F464 Username deve ser único no sistema\n    - \U0001F510 Senhas devem\
        \ ter pelo menos 8 caracteres\n    \n    **\U0001F4A1 Dica:** Os campos telefone\
        \ e endereço podem ser preenchidos posteriormente no perfil do usuário.\n\
        \    "
      tags:
      - Autenticação
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSelfRegisterRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
  /api/auth/token/:
    post:
      operationId: auth_token_create
      summary: Login e obter token
      description: Envie `username` e `password` para receber um token de autenticação.
      tags:
      - Autenticação
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/pets/:
    get:
      operationId: pets_list
      summary: Listar pets
      description: Retorna lista de pets. Clientes veem apenas seus pets, funcionários/admins
        veem todos.
      tags:
      - Pets
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
          description: ''
    post:
      operationId: pets_create
      summary: Criar pet
      description: Cria um novo pet. Para clientes, o tutor é definido automaticamente.
        Suporte a upload de foto (multipart/form-data).
      tags:
      - Pets
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PetRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
  /api/pets/{id}/:
    get:
      operationId: pets_retrieve
      summary: Detalhes do pet
      description: Retorna detalhes de um pet específico.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Pets
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
    patch:
      operationId: pets_partial_update
      summary: Atualizar pet
      description: Atualiza parcialmente um pet. Apenas os campos enviados serão alterados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Pets
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPetRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: ''
    delete:
      operationId: pets_destroy
      summary: Deletar pet
      description: Remove um pet do sistema. Apenas o dono ou admin pode deletar.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Pets
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/servicos/:
    get:
      operationId: servicos_list
      summary: Listar serviços
      description: Lista todos os serviços disponíveis na clínica veterinária.
      tags:
      - Serviços
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Servico'
          description: ''
    post:
      operationId: servicos_create
      summary: Criar serviço
      description: Cria um novo serviço (apenas admin).
      tags:
      - Serviços
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicoRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'
          description: ''
  /api/servicos/{id}/:
    get:
      operationId: servicos_retrieve
      summary: Detalhes do serviço
      description: Obtém os detalhes de um serviço específico.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Serviços
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'
          description: ''
    patch:
      operationId: servicos_partial_update
      summary: Atualizar serviço
      description: Atualiza parcialmente um serviço (apenas admin).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Serviços
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServicoRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'
          description: ''
    delete:
      operationId: servicos_destroy
      summary: Excluir serviço
      description: Exclui um serviço (apenas admin).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Serviços
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/agendamentos/:
    get:
      operationId: agendamentos_list
      summary: Listar agendamentos
      description: |-
        Lista agendamentos conforme permissão do usuário:
        - **Clientes**: Apenas seus próprios agendamentos
        - **Funcionários/Veterinários/Admins**: Todos os agendamentos
      tags:
      - Agendamentos
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agendamento'
          description: ''
    post:
      operationId: agendamentos_create
      summary: Criar agendamento
      description: Cria um novo agendamento para um pet.
      tags:
      - Agendamentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgendamentoRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agendamento'
          description: ''
  /api/agendamentos/{id}/:
    get:
      operationId: agendamentos_retrieve
      summary: Detalhes do agendamento
      description: Obtém os detalhes de um agendamento específico.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Agendamentos
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agendamento'
          description: ''
    patch:
      operationId: agendamentos_partial_update
      summary: Atualizar agendamento
      description: 'Atualiza parcialmente um agendamento (ex: alterar status).'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Agendamentos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAgendamentoRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agendamento'
          description: ''
    delete:
      operationId: agendamentos_destroy
      summary: Cancelar agendamento
      description: Cancela/exclui um agendamento.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Agendamentos
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/prontuarios/:
    get:
      operationId: prontuarios_list
      summary: Listar prontuários
      description: |-
        Lista prontuários médicos conforme permissão do usuário:
        - **Clientes**: Apenas prontuários dos seus pets
        - **Funcionários/Admins**: Todos os prontuários
        - **Veterinários**: Podem criar e ver todos os prontuários
      tags:
      - Prontuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prontuario'
          description: ''
    post:
      operationId: prontuarios_create
      summary: Criar prontuário
      description: Cria um novo prontuário médico (apenas veterinários e admins).
      tags:
      - Prontuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProntuarioRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prontuario'
          description: ''
  /api/prontuarios/{id}/:
    get:
      operationId: prontuarios_retrieve
      summary: Detalhes do prontuário
      description: Obtém os detalhes completos de um prontuário médico.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Prontuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prontuario'
          description: ''
    patch:
      operationId: prontuarios_partial_update
      summary: Atualizar prontuário
      description: Atualiza parcialmente um prontuário médico.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Prontuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProntuarioRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prontuario'
          description: ''
    delete:
      operationId: prontuarios_destroy
      summary: Excluir prontuário
      description: Exclui um prontuário médico (apenas admins).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Prontuários
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/me/:
    get:
      operationId: me_retrieve
      summary: Meu perfil
      description: Retorna informações do perfil do usuário logado.
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
  /api/funcionario/create-user/:
    post:
      operationId: funcionario_create_user_create
      summary: Criar usuário (Funcionário)
      description: 'Endpoint para funcionários criarem usuários dos tipos: Cliente,
        Funcionário ou Veterinário.'
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFuncionarioCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
  /api/admin/create-user/:
    post:
      operationId: admin_create_user_create
      summary: Criar usuário (Admin)
      description: Endpoint para administradores criarem usuários de qualquer tipo.
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdminCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
  /api/admin/users/:
    get:
      operationId: admin_users_list
      summary: Listar todos os usuários (Admin)
      description: Lista todos os usuários do sistema. Apenas administradores.
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAdmin'
          description: ''
    post:
      operationId: admin_users_create
      summary: Criar usuário (Admin - Alternativo)
      description: Cria um novo usuário via administrador (rota alternativa).
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdminRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdmin'
          description: ''
  /api/admin/users/{id}/:
    get:
      operationId: admin_users_retrieve
      summary: Detalhes do usuário (Admin)
      description: Retorna detalhes de um usuário específico.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdmin'
          description: ''
    patch:
      operationId: admin_users_partial_update
      summary: Atualizar usuário (Admin)
      description: Atualiza parcialmente um usuário. Apenas os campos enviados serão
        alterados.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdmin'
          description: ''
    delete:
      operationId: admin_users_destroy
      summary: Deletar usuário (Admin)
      description: Remove um usuário do sistema.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/funcionario/users/:
    get:
      operationId: funcionario_users_list
      summary: Listar clientes (Funcionário)
      description: Funcionários podem listar apenas usuários do tipo CLIENTE.
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetail'
          description: ''
    post:
      operationId: funcionario_users_create
      summary: Criar cliente (Funcionário)
      description: ViewSet para funcionários gerenciarem usuários clientes.
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFuncionarioCreateRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFuncionarioCreate'
          description: ''
  /api/funcionario/users/{id}/:
    get:
      operationId: funcionario_users_retrieve
      summary: Detalhes do cliente (Funcionário)
      description: Funcionários podem ver detalhes apenas de clientes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: funcionario_users_partial_update
      summary: Atualizar cliente (Funcionário)
      description: Funcionários podem atualizar parcialmente dados de clientes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminRequest'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdmin'
          description: ''
    delete:
      operationId: funcionario_users_destroy
      summary: Excluir cliente (Funcionário)
      description: Funcionários podem excluir usuários clientes.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/logs/:
    get:
      operationId: logs_retrieve
      summary: Visualizar logs do sistema (Admin)
      description: Retorna as últimas 100 linhas do log de debug. Apenas administradores.
      tags:
      - Usuários
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogResponse'
          description: ''
  /api/admin/users/{id}/toggle_active/:
    post:
      operationId: admin_users_toggle_active_create
      summary: Ativar/Desativar usuário (Admin)
      description: Ativa ou desativa um usuário. Apenas administradores.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Usuários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdminRequest'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdmin'
          description: ''
components:
  schemas:
    Agendamento:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data_hora:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        observacoes:
          type: string
        pet:
          $ref: '#/components/schemas/Pet'
          readOnly: true
        servico:
          $ref: '#/components/schemas/Servico'
          readOnly: true
      required:
      - data_hora
      - id
      - pet
      - servico
    AgendamentoRequest:
      type: object
      properties:
        pet_id:
          type: integer
        servico_id:
          type: integer
        data_hora:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        observacoes:
          type: string
      required:
      - data_hora
      - pet_id
      - servico_id
    AuthToken:
      type: object
      properties:
        token:
          type: string
          readOnly: true
      required:
      - token
    AuthTokenRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - password
      - username
    LogResponse:
      type: object
      properties:
        content:
          type: string
      required:
      - content
    PatchedAgendamentoRequest:
      type: object
      properties:
        pet_id:
          type: integer
        servico_id:
          type: integer
        data_hora:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        observacoes:
          type: string
    PatchedPetRequest:
      type: object
      properties:
        nome:
          type: string
          maxLength: 100
        especie:
          type: string
          maxLength: 50
        raca:
          type: string
          maxLength: 50
        data_de_nascimento:
          type: string
          format: date
          nullable: true
        sexo:
          $ref: '#/components/schemas/SexoEnum'
        foto:
          type: string
          format: binary
        observacoes:
          type: string
        tutor:
          type: integer
    PatchedProntuarioRequest:
      type: object
      properties:
        pet:
          type: integer
        veterinario:
          type: integer
        data_consulta:
          type: string
          format: date-time
        tipo_consulta:
          $ref: '#/components/schemas/TipoConsultaEnum'
        peso:
          type: string
          format: decimal
          nullable: true
        temperatura:
          type: string
          format: decimal
          nullable: true
        motivo_consulta:
          type: string
        exame_fisico:
          type: string
        diagnostico:
          type: string
        tratamento:
          type: string
        medicamentos:
          type: string
        observacoes:
          type: string
        proxima_consulta:
          type: string
          format: date-time
          nullable: true
    PatchedServicoRequest:
      type: object
      properties:
        nome:
          type: string
          maxLength: 100
        descricao:
          type: string
        duracao:
          type: string
        preco:
          type: string
          format: decimal
        disponivel:
          type: boolean
    PatchedUserAdminRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
        profile:
          $ref: '#/components/schemas/ProfileRequest'
    Pet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        especie:
          type: string
          maxLength: 50
        raca:
          type: string
          maxLength: 50
        data_de_nascimento:
          type: string
          format: date
          nullable: true
        sexo:
          $ref: '#/components/schemas/SexoEnum'
        foto:
          type: string
          format: uri
        observacoes:
          type: string
        idade:
          type: string
          readOnly: true
        tutor_detail:
          $ref: '#/components/schemas/User'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - especie
      - id
      - idade
      - nome
      - tutor_detail
      - updated_at
    PetRequest:
      type: object
      properties:
        nome:
          type: string
          maxLength: 100
          minLength: 1
        especie:
          type: string
          maxLength: 50
          minLength: 1
        raca:
          type: string
          maxLength: 50
        data_de_nascimento:
          type: string
          format: date
          nullable: true
        sexo:
          $ref: '#/components/schemas/SexoEnum'
        foto:
          type: string
          format: binary
        observacoes:
          type: string
        tutor:
          type: integer
      required:
      - especie
      - nome
    Profile:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role821Enum'
        role_display:
          type: string
          readOnly: true
        telefone:
          type: string
          maxLength: 20
          nullable: true
        endereco:
          type: string
          nullable: true
        crmv:
          type: string
          maxLength: 20
          nullable: true
        especialidade:
          type: string
          maxLength: 100
          nullable: true
      required:
      - role_display
    ProfileRequest:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role821Enum'
        telefone:
          type: string
          maxLength: 20
          nullable: true
        endereco:
          type: string
          nullable: true
        crmv:
          type: string
          maxLength: 20
          nullable: true
        especialidade:
          type: string
          maxLength: 100
          nullable: true
    Prontuario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pet:
          type: integer
        pet_nome:
          type: string
          readOnly: true
        veterinario:
          type: integer
        veterinario_nome:
          type: string
          readOnly: true
        data_consulta:
          type: string
          format: date-time
        tipo_consulta:
          $ref: '#/components/schemas/TipoConsultaEnum'
        tipo_consulta_display:
          type: string
          readOnly: true
        peso:
          type: string
          format: decimal
          nullable: true
        temperatura:
          type: string
          format: decimal
          nullable: true
        motivo_consulta:
          type: string
        exame_fisico:
          type: string
        diagnostico:
          type: string
        tratamento:
          type: string
        medicamentos:
          type: string
        observacoes:
          type: string
        proxima_consulta:
          type: string
          format: date-time
          nullable: true
        idade_pet:
          type: integer
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - idade_pet
      - motivo_consulta
      - pet
      - pet_nome
      - tipo_consulta_display
      - updated_at
      - veterinario
      - veterinario_nome
    ProntuarioRequest:
      type: object
      properties:
        pet:
          type: integer
        veterinario:
          type: integer
        data_consulta:
          type: string
          format: date-time
        tipo_consulta:
          $ref: '#/components/schemas/TipoConsultaEnum'
        peso:
          type: string
          format: decimal
          nullable: true
        temperatura:
          type: string
          format: decimal
          nullable: true
        motivo_consulta:
          type: string
          minLength: 1
        exame_fisico:
          type: string
        diagnostico:
          type: string
        tratamento:
          type: string
        medicamentos:
          type: string
        observacoes:
          type: string
        proxima_consulta:
          type: string
          format: date-time
          nullable: true
      required:
      - motivo_consulta
      - pet
      - veterinario
    Role821Enum:
      enum:
      - ADMIN
      - FUNCIONARIO
      - VETERINARIO
      - CLIENTE
      type: string
    Servico:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 100
        descricao:
          type: string
        duracao:
          type: string
        preco:
          type: string
          format: decimal
        disponivel:
          type: boolean
      required:
      - id
      - nome
      - preco
    ServicoRequest:
      type: object
      properties:
        nome:
          type: string
          maxLength: 100
          minLength: 1
        descricao:
          type: string
        duracao:
          type: string
        preco:
          type: string
          format: decimal
          minLength: 1
        disponivel:
          type: boolean
      required:
      - nome
      - preco
    SexoEnum:
      enum:
      - MACHO
      - FEMEA
      - DESCONHECIDO
      type: string
    StatusEnum:
      enum:
      - AGENDADO
      - CONCLUIDO
      - CANCELADO
      type: string
    TipoConsultaEnum:
      enum:
      - ROTINA
      - EMERGENCIA
      - RETORNO
      - EXAME
      - CIRURGIA
      - VACINA
      type: string
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - id
      - username
    UserAdmin:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        profile:
          $ref: '#/components/schemas/Profile'
      required:
      - date_joined
      - id
      - profile
      - username
    UserAdminCreateRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 8
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        first_name:
          type: string
          maxLength: 150
          minLength: 1
        last_name:
          type: string
          maxLength: 150
          minLength: 1
        role:
          $ref: '#/components/schemas/Role821Enum'
        telefone:
          type: string
          maxLength: 20
          nullable: true
        endereco:
          type: string
          nullable: true
        crmv:
          type: string
          maxLength: 20
          nullable: true
        especialidade:
          type: string
          maxLength: 100
          nullable: true
      required:
      - confirm_password
      - email
      - first_name
      - last_name
      - password
      - username
    UserAdminRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
        profile:
          $ref: '#/components/schemas/ProfileRequest'
      required:
      - profile
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        profile:
          $ref: '#/components/schemas/Profile'
          readOnly: true
      required:
      - date_joined
      - id
      - profile
      - username
    UserFuncionarioCreate:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          $ref: '#/components/schemas/UserFuncionarioCreateRoleEnum'
        telefone:
          type: string
          maxLength: 20
          nullable: true
        endereco:
          type: string
          nullable: true
        crmv:
          type: string
          maxLength: 20
          nullable: true
        especialidade:
          type: string
          maxLength: 100
          nullable: true
      required:
      - email
      - first_name
      - last_name
      - username
    UserFuncionarioCreateRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 8
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        first_name:
          type: string
          maxLength: 150
          minLength: 1
        last_name:
          type: string
          maxLength: 150
          minLength: 1
        role:
          $ref: '#/components/schemas/UserFuncionarioCreateRoleEnum'
        telefone:
          type: string
          maxLength: 20
          nullable: true
        endereco:
          type: string
          nullable: true
        crmv:
          type: string
          maxLength: 20
          nullable: true
        especialidade:
          type: string
          maxLength: 100
          nullable: true
      required:
      - confirm_password
      - email
      - first_name
      - last_name
      - password
      - username
    UserFuncionarioCreateRoleEnum:
      enum:
      - CLIENTE
      - FUNCIONARIO
      - VETERINARIO
      type: string
    UserSelfRegisterRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 8
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        first_name:
          type: string
          maxLength: 150
          minLength: 1
        last_name:
          type: string
          maxLength: 150
          minLength: 1
        telefone:
          type: string
          maxLength: 20
          nullable: true
        endereco:
          type: string
          nullable: true
      required:
      - confirm_password
      - email
      - first_name
      - last_name
      - password
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
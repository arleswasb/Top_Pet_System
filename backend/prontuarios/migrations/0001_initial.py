# Generated by Django 4.2.23 on 2025-06-27 01:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vacina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_vacina', models.CharField(help_text='Nome/tipo da vacina aplicada', max_length=100)),
                ('fabricante', models.CharField(blank=True, help_text='Fabricante da vacina', max_length=100, null=True)),
                ('lote', models.CharField(blank=True, help_text='Lote da vacina', max_length=50, null=True)),
                ('data_aplicacao', models.DateTimeField(help_text='Data e hora da aplicação da vacina')),
                ('data_vencimento', models.DateField(blank=True, help_text='Data de vencimento da vacina', null=True)),
                ('proxima_dose', models.DateField(blank=True, help_text='Data recomendada para próxima dose', null=True)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre a vacinação', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pet', models.ForeignKey(help_text='Pet que recebeu a vacina', on_delete=django.db.models.deletion.CASCADE, related_name='vacinas', to='pets.pet')),
                ('veterinario', models.ForeignKey(help_text='Veterinário que aplicou a vacina', on_delete=django.db.models.deletion.PROTECT, related_name='vacinas_aplicadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vacina',
                'verbose_name_plural': 'Vacinas',
                'ordering': ['-data_aplicacao'],
            },
        ),
        migrations.CreateModel(
            name='Prontuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_consulta', models.DateTimeField(auto_now_add=True, help_text='Data e hora da consulta')),
                ('tipo_consulta', models.CharField(choices=[('ROTINA', 'Consulta de Rotina'), ('EMERGENCIA', 'Emergência'), ('RETORNO', 'Retorno'), ('VACINACAO', 'Vacinação'), ('CIRURGIA', 'Cirurgia'), ('EXAME', 'Exame')], default='ROTINA', help_text='Tipo de consulta realizada', max_length=20)),
                ('peso', models.DecimalField(blank=True, decimal_places=2, help_text='Peso do animal em kg', max_digits=5, null=True)),
                ('temperatura', models.DecimalField(blank=True, decimal_places=1, help_text='Temperatura corporal em °C', max_digits=4, null=True)),
                ('sintomas', models.TextField(blank=True, help_text='Sintomas apresentados pelo animal', null=True)),
                ('diagnostico', models.TextField(blank=True, help_text='Diagnóstico veterinário', null=True)),
                ('tratamento', models.TextField(blank=True, help_text='Tratamento prescrito', null=True)),
                ('medicamentos', models.TextField(blank=True, help_text='Medicamentos prescritos e dosagens', null=True)),
                ('observacoes', models.TextField(blank=True, help_text='Observações gerais sobre a consulta', null=True)),
                ('retorno_recomendado', models.DateField(blank=True, help_text='Data recomendada para retorno', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pet', models.ForeignKey(help_text='Pet ao qual pertence este prontuário', on_delete=django.db.models.deletion.CASCADE, related_name='prontuarios', to='pets.pet')),
                ('veterinario', models.ForeignKey(help_text='Veterinário responsável pelo atendimento', on_delete=django.db.models.deletion.PROTECT, related_name='prontuarios_veterinario', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prontuário',
                'verbose_name_plural': 'Prontuários',
                'ordering': ['-data_consulta'],
            },
        ),
        migrations.CreateModel(
            name='Exame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_exame', models.CharField(choices=[('SANGUE', 'Exame de Sangue'), ('URINA', 'Exame de Urina'), ('FEZES', 'Exame de Fezes'), ('RAIO_X', 'Raio-X'), ('ULTRASSOM', 'Ultrassom'), ('BIOPSIA', 'Biópsia'), ('OUTRO', 'Outro')], help_text='Tipo de exame realizado', max_length=20)),
                ('data_realizacao', models.DateTimeField(help_text='Data e hora da realização do exame')),
                ('data_resultado', models.DateTimeField(blank=True, help_text='Data e hora do resultado do exame', null=True)),
                ('resultado', models.TextField(blank=True, help_text='Resultado do exame', null=True)),
                ('valores_referencia', models.TextField(blank=True, help_text='Valores de referência para o exame', null=True)),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre o exame', null=True)),
                ('arquivo_resultado', models.FileField(blank=True, help_text='Arquivo digital do resultado do exame', null=True, upload_to='exames/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prontuario', models.ForeignKey(help_text='Prontuário ao qual este exame pertence', on_delete=django.db.models.deletion.CASCADE, related_name='exames', to='prontuarios.prontuario')),
            ],
            options={
                'verbose_name': 'Exame',
                'verbose_name_plural': 'Exames',
                'ordering': ['-data_realizacao'],
            },
        ),
    ]

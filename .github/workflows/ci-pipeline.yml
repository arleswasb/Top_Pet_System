name: CI Pipeline - Lint e Testes

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    name: "An√°lise de C√≥digo (Pylint)"
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install pylint pylint-django django djangorestframework
          pip install -r backend/requirements.txt
          
      - name: Executar Pylint no backend
        run: |
          cd backend
          pylint --errors-only $(find . -name "*.py" -not -path "./venv/*" -not -path "./__pycache__/*" -not -path "./migrations/*")
        continue-on-error: false
        
      - name: Relat√≥rio de Pylint (informativo)
        run: |
          cd backend
          pylint --errors-only $(find . -name "*.py" -not -path "./venv/*" -not -path "./__pycache__/*" -not -path "./migrations/*") || true
        continue-on-error: true

  tests:
    name: "Execu√ß√£o de Testes"
    runs-on: ubuntu-latest
    needs: lint  # Executa ap√≥s o lint passar
    
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        
      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          
      - name: Configurar banco de dados de teste
        run: |
          cd backend
          python manage.py migrate --settings=top_pet.settings
          
      - name: Executar testes do Django
        run: |
          cd backend
          python manage.py test --verbosity=2 --keepdb
        env:
          DJANGO_SETTINGS_MODULE: top_pet.settings
          
      - name: Executar testes de unidade (pets)
        run: |
          cd backend
          python manage.py test pets.tests_unidade --verbosity=2
        continue-on-error: false
        
      - name: Executar testes de integra√ß√£o (agendamentos)
        run: |
          cd backend
          python manage.py test agendamentos.tests_integracao --verbosity=2
        continue-on-error: false
        
      - name: Relat√≥rio de cobertura de testes
        run: |
          cd backend
          echo "‚úÖ Testes executados com sucesso!"
          echo "üìä Apps testados:"
          echo "  - pets: testes de unidade"
          echo "  - agendamentos: testes de integra√ß√£o"
          echo "  - users: testes b√°sicos"
          echo "  - prontuarios: testes b√°sicos"
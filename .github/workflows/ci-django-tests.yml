# Nome do seu workflow, que aparecerá na aba "Actions" do GitHub
name: Testes de CI do Django

# Define os gatilhos: quando este workflow deve rodar
on:
  # Roda em pushes para a branch 'main'
  push:
    branches: [ "main" ]
  # Roda em pull requests que têm a 'main' como branch alvo
  pull_request:
    branches: [ "main" ]

# Define os "trabalhos" (jobs) que o workflow executará
jobs:
  build-and-test:
    # O tipo de máquina que o job rodará. 'ubuntu-latest' é o padrão e recomendado.
    runs-on: ubuntu-latest

    # A sequência de passos que o job executará
    steps:
      # Passo 1: Clona o seu repositório para dentro da máquina virtual do GitHub
      - name: Checkout do código
        uses: actions/checkout@v4

      # Passo 2: Constrói as imagens e inicia os serviços em segundo plano (-d)
      - name: Construir e iniciar os contêineres
        run: docker compose up -d --build

      # Passo 3: Uma pequena pausa para garantir que o banco de dados esteja 100% pronto
      - name: Aguardar o banco de dados estabilizar
        run: sleep 10

      # Passo 4: Executa o comando de teste do Django dentro do contêiner 'web'
      - name: Executar os testes do Django
        run: docker compose exec web python manage.py test

      # Passo 5: Desliga os contêineres ao final, mesmo se os testes falharem
      - name: Parar os contêineres
        if: always()
        run: docker compose down
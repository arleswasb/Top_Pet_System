name: Testes de CI do Django

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    # Define um serviço de banco de dados que rodará durante os testes
    services:
      postgres:
        image: postgres:13
        # Define as credenciais para o banco de dados de teste
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        # Verifica se o banco está pronto antes de continuar
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Executar os testes do Django
        # Este é o comando chave: 'run' em vez de 'exec'
        # Ele inicia o 'web', executa o teste e para.
        run: docker compose run --rm web python manage.py test
        env:
          # Passa as variáveis de ambiente para o contêiner 'web'
          # para que o settings.py possa se conectar ao banco de dados 'postgres'
          POSTGRES_NAME: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: postgres # O nome do host é o nome do serviço definido acima